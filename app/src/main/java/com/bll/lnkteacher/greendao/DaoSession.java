package com.bll.lnkteacher.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.bll.lnkteacher.mvp.model.Book;
import com.bll.lnkteacher.mvp.model.CourseBean;
import com.bll.lnkteacher.mvp.model.DateEvent;
import com.bll.lnkteacher.mvp.model.NoteContent;
import com.bll.lnkteacher.mvp.model.NoteTypeBean;
import com.bll.lnkteacher.mvp.model.Notebook;

import com.bll.lnkteacher.greendao.BookDao;
import com.bll.lnkteacher.greendao.CourseBeanDao;
import com.bll.lnkteacher.greendao.DateEventDao;
import com.bll.lnkteacher.greendao.NoteContentDao;
import com.bll.lnkteacher.greendao.NoteTypeBeanDao;
import com.bll.lnkteacher.greendao.NotebookDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig bookDaoConfig;
    private final DaoConfig courseBeanDaoConfig;
    private final DaoConfig dateEventDaoConfig;
    private final DaoConfig noteContentDaoConfig;
    private final DaoConfig noteTypeBeanDaoConfig;
    private final DaoConfig notebookDaoConfig;

    private final BookDao bookDao;
    private final CourseBeanDao courseBeanDao;
    private final DateEventDao dateEventDao;
    private final NoteContentDao noteContentDao;
    private final NoteTypeBeanDao noteTypeBeanDao;
    private final NotebookDao notebookDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        bookDaoConfig = daoConfigMap.get(BookDao.class).clone();
        bookDaoConfig.initIdentityScope(type);

        courseBeanDaoConfig = daoConfigMap.get(CourseBeanDao.class).clone();
        courseBeanDaoConfig.initIdentityScope(type);

        dateEventDaoConfig = daoConfigMap.get(DateEventDao.class).clone();
        dateEventDaoConfig.initIdentityScope(type);

        noteContentDaoConfig = daoConfigMap.get(NoteContentDao.class).clone();
        noteContentDaoConfig.initIdentityScope(type);

        noteTypeBeanDaoConfig = daoConfigMap.get(NoteTypeBeanDao.class).clone();
        noteTypeBeanDaoConfig.initIdentityScope(type);

        notebookDaoConfig = daoConfigMap.get(NotebookDao.class).clone();
        notebookDaoConfig.initIdentityScope(type);

        bookDao = new BookDao(bookDaoConfig, this);
        courseBeanDao = new CourseBeanDao(courseBeanDaoConfig, this);
        dateEventDao = new DateEventDao(dateEventDaoConfig, this);
        noteContentDao = new NoteContentDao(noteContentDaoConfig, this);
        noteTypeBeanDao = new NoteTypeBeanDao(noteTypeBeanDaoConfig, this);
        notebookDao = new NotebookDao(notebookDaoConfig, this);

        registerDao(Book.class, bookDao);
        registerDao(CourseBean.class, courseBeanDao);
        registerDao(DateEvent.class, dateEventDao);
        registerDao(NoteContent.class, noteContentDao);
        registerDao(NoteTypeBean.class, noteTypeBeanDao);
        registerDao(Notebook.class, notebookDao);
    }
    
    public void clear() {
        bookDaoConfig.clearIdentityScope();
        courseBeanDaoConfig.clearIdentityScope();
        dateEventDaoConfig.clearIdentityScope();
        noteContentDaoConfig.clearIdentityScope();
        noteTypeBeanDaoConfig.clearIdentityScope();
        notebookDaoConfig.clearIdentityScope();
    }

    public BookDao getBookDao() {
        return bookDao;
    }

    public CourseBeanDao getCourseBeanDao() {
        return courseBeanDao;
    }

    public DateEventDao getDateEventDao() {
        return dateEventDao;
    }

    public NoteContentDao getNoteContentDao() {
        return noteContentDao;
    }

    public NoteTypeBeanDao getNoteTypeBeanDao() {
        return noteTypeBeanDao;
    }

    public NotebookDao getNotebookDao() {
        return notebookDao;
    }

}
